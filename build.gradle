plugins {
    id 'maven-publish'
    id "org.javamodularity.moduleplugin" version "1.8.10"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'org.javamodularity.moduleplugin'
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://maven.fabricmc.net/' }
    }

    dependencies {
        implementation 'com.google.guava:guava:30.1.1-jre'
        implementation 'com.google.code.gson:gson:2.8.8'

        testImplementation 'org.hamcrest:hamcrest:2.2'
        testImplementation 'org.hamcrest:hamcrest-library:2.2'
        testImplementation 'junit:junit:4.13.2'
    }

    group = 'cuchaz'
    version = '1.4.2'

    version = version + (System.getenv("GITHUB_ACTIONS") ? "" : "+local")

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    java {
        withSourcesJar()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"

        it.options.release = 16
    }
}

allprojects {
    publishing {
        repositories {
            mavenLocal()

            def ENV = System.getenv()
            if (ENV.MAVEN_URL) {
                maven {
                    url ENV.MAVEN_URL
                    credentials {
                        username ENV.MAVEN_USERNAME
                        password ENV.MAVEN_PASSWORD
                    }
                }
            }
        }
    }
}

// A task to ensure that the version being released has not already been released.
task checkVersion {
    doFirst {
        def xml = new URL("https://maven.fabricmc.net/cuchaz/enigma/maven-metadata.xml").text
        def metadata = new XmlSlurper().parseText(xml)
        def versions = metadata.versioning.versions.version*.text();
        if (versions.contains(version)) {
            throw new RuntimeException("${version} has already been released!")
        }
    }
}

publish.mustRunAfter checkVersion
